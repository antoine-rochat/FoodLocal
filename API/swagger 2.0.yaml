swagger: '2.0'
info:
  version: '0.0.3'
  title: Local Food
  description: Une API pour le site internet foodlocal.ch crée avec la spécification OpenAPI 3.0.
  contact:
    email: info@foodlocal.ch
    name: Local Food Team
    url: http://foodlocal.ch/contact
host: api.foodlocal.ch
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /products:
    get:
      description: Retourne "limit" produits de la base de données, fitlrés selon les tags "tags" reçus à partir de la page "page". Sans paramètres, retourne tous les produits de la base de données.
      summary: Retourne tous les produits de la base de données.
      tags:
      - products
      operationId: ProductsGet
      produces:
      - application/json
      parameters:
      - name: tags
        in: query
        required: false
        type: string
        description: Tags à utiliser pour filtrer les résultats. Séparer plusieurs tags à l'aide de ",".
      - name: limit
        in: query
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Nombre maximum de produits à retourner.
      - name: page
        in: query
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Numéro de la page à retourner. Permet par exemple de récupérer la "page"ème page de "limit" produits. Par exemple, si "limit" vaut 20 et "page" vaut 3, on récupère la 3ème page de 20 produits, soit les produits 41 à 60.
      responses:
        200:
          description: Réponses contenant "limit" produits de la base de données fitlrés selon les tags "tags" reçus à partir de la page "page".
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Erreur! Impossible de récupérer les produits de la base de données.
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Ajoute un nouveau produit dans la base de données. Attention, doublons autorisés!
      summary: Ajoute un nouveau produit dans la base de données.
      tags:
      - products
      operationId: ProductsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Les données du produit à ajouter à la base de données.
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: Le produit a bien été ajouté à la base de données.
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Erreur! Impossible d'ajouter le produit à la base de données.
          schema:
            $ref: '#/definitions/Error'
  /products/{id}:
    get:
      description: Retourne le produit correspondant à l'id reçu.
      summary: Retourne le produit correspondant à l'id reçu.
      tags:
      - products
      operationId: ProductsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du produit à récupérer.
      responses:
        200:
          description: Réponse contenant le produit correspondant à l'id recherché.
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Erreur! Impossible de récupérer le produit correspondant à l'id reçu dans la base de données.
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Met à jour le produit possédant l'id reçu avec les données reçues. Remplace toutes les données du produit dans la base de données par celles reçues!
      summary: Met à jour le produit possédant l'id reçu.
      tags:
      - products
      operationId: ProductsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du produit à mettre à jour.
      - name: body
        in: body
        required: true
        description: Données du produit à mettre à jour dans la base de données. Attention, l'ensemble des informations de ce produit stoquées dans la base de données seront remplacées par celles-ci!
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: Le produit a bien été mis à jour à la base de données
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Erreur! Impossible de mettre à jour le produit reçu.
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Supprime le produit correspondant à l'id reçu.
      summary: Supprime le produit correspondant à l'id reçu.
      tags:
      - products
      operationId: ProductsByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du produit à supprimer
      responses:
        204:
          description: Le produit correspondant à l'id reçu a bien été supprimé de la base de données.
        default:
          description: Erreur! Impossible de supprimer de la base de données le produit correspondant à l'id reçu.
          schema:
            $ref: '#/definitions/Error'
  /producers:
    get:
      description: Retourne "limit" producteurs de la base de données, fitlrés selon les tags "tags" reçus à partir de la page "page". Sans paramètres, retourne tous les producteurs de la base de données.
      summary: Retourne tous les producteurs de la base de données.
      tags:
      - producer
      operationId: ProducersGet
      produces:
      - application/json
      parameters:
      - name: tags
        in: query
        required: false
        type: array
        items:
          type: string
        description: Tags à utiliser pour filtrer les résultats. Séparer plusieurs tags à l'aide de ",".
      - name: limit
        in: query
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Nombre maximum de producteurs à retourner.
      - name: page
        in: query
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Numéro de la page à retourner. Permet par exemple de récupérer la "page"ème page de "limit" producteurs. Par exemple, si "limit" vaut 20 et "page" vaut 3, on récupère la 3ème page de 20 producteurs, soit les producteurs 41 à 60.
      - name: lat
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: La latitude de l'utilisateur
      - name: long
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: La longitude de l'utilisateur
      - name: zoom
        in: query
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Le zoom actuel de la map de l'utilisateur. Permet à l'API de déterminer la zone vue par l'utilisateur et donc quels producteurs retourner pour l'affichage.
      responses:
        200:
          description: Réponses contenant "limit" producteurs de la base de données fitlrés selon les tags "tags" reçus à partir de la page "page".
          schema:
            type: array
            items:
              $ref: '#/definitions/Producer'
        default:
          description: Erreur! Impossible de récupérer les producteurs de la base de données.
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Ajoute un nouveau producteur dans la base de données. Doublons autorisés!
      summary: Ajoute un nouveau producteur dans la base de données.
      tags:
      - producer
      operationId: ProducersPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Les données du producteur à ajouter à la base de données.
        schema:
          $ref: '#/definitions/Producer'
      responses:
        200:
          description: Le producteur a bien été ajouté à la base de données.
          schema:
            $ref: '#/definitions/Producer'
        default:
          description: Erreur! Impossible d'ajouter le producteur à la base de données.
          schema:
            $ref: '#/definitions/Error'
  /producers/{id}:
    get:
      description: Retourne le producteur correspondant à l'id reçu.
      summary: Retourne le producteur correspondant à l'id reçu.
      tags:
      - producer
      operationId: ProducersByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du producteur à récupérer.
      responses:
        200:
          description: Réponse contenant le producteur correspondant à l'id recherché.
          schema:
            $ref: '#/definitions/Producer'
        default:
          description: Erreur! Impossible de récupérer le producteur correspondant à l'id reçu dans la base de données.
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Met à jour le producteur possédant l'id reçu avec les données reçues. Remplace toutes les données du producteur dans la base de données par celles reçues!
      summary: Met à jour le producteur possédant l'id reçu.
      tags:
      - producer
      operationId: ProducersByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du producteur à mettre à jour.
      - name: body
        in: body
        required: true
        description: Données du producteur à mettre à jour dans la base de données. Attention, l'ensemble des informations de ce producteur stoquées dans la base de données seront remplacées par celles-ci!
        schema:
          $ref: '#/definitions/Producer'
      responses:
        200:
          description: Le producteur a bien été mis à jour.
          schema:
            $ref: '#/definitions/Producer'
        default:
          description: Erreur! Impossible de mettre à jour le producteur reçu.
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Supprime le producteur correspondant à l'id reçu.
      summary: Supprime le producteur correspondant à l'id reçu.
      tags:
      - producer
      operationId: ProducersByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du producteur à supprimer.
      responses:
        204:
          description: Le producteur correspondant à l'id reçu a bien été supprimé de la base de données.
        default:
          description: Erreur! Impossible de supprimer de la base de données le producteur correspondant à l'id reçu.
          schema:
            $ref: '#/definitions/Error'
  /salespoints:
    get:
      description: Retourne "limit" points de vente de la base de données, fitlrés selon les tags "tags" reçus à partir de la page "page". Sans paramètres, retourne tous les points de vente de la base de données.
      summary: Retourne tous les points de vente de la base de données.
      tags:
      - producer
      operationId: SalespointsGet
      produces:
      - application/json
      parameters:
      - name: tags
        in: query
        required: false
        type: array
        items:
          type: string
        description: Tags à utiliser pour filtrer les résultats. Séparer plusieurs tags à l'aide de ",".
      - name: limit
        in: query
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Nombre maximum de points de vente à retourner.
      - name: page
        in: query
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Numéro de la page à retourner. Permet par exemple de récupérer la "page"ème page de "limit" points de vente. Par exemple, si "limit" vaut 20 et "page" vaut 3, on récupère la 3ème page de 20 points de vente, soit les points de vente 41 à 60.
      responses:
        200:
          description: Réponses contenant "limit" points de vente de la base de données fitlrés selon les tags "tags" reçus à partir de la page "page".
          schema:
            type: array
            items:
              $ref: '#/definitions/SalesPoint'
        default:
          description: Erreur! Impossible de récupérer les points de vente de la base de données.
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Ajoute un nouveau point de vente dans la base de données. Doublons autorisés!
      summary: Ajoute un nouveau point de vente dans la base de données.
      tags:
      - producer
      operationId: SalespointsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Les données du point de vente à ajouter à la base de données.
        schema:
          $ref: '#/definitions/SalesPoint'
      responses:
        200:
          description: Le point de vente a bien été ajouté à la base de données.
          schema:
            $ref: '#/definitions/SalesPoint'
        default:
          description: Erreur! Impossible d'ajouter le point de vente à la base de données.
          schema:
            $ref: '#/definitions/Error'
  /salespoints/{id}:
    get:
      description: Retourne le point de vente correspondant à l'id reçu.
      summary: Retourne le points de vente correspondant à l'id reçu.
      tags:
      - producer
      operationId: SalespointsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du point de vente à récupérer.
      responses:
        200:
          description: Réponse contenant le point de vente correspondant à l'id recherché.
          schema:
            $ref: '#/definitions/SalesPoint'
        default:
          description: Erreur! Impossible de récupérer le point de vente correspondant à l'id reçu dans la base de données.
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Met à jour le point de vente possédant l'id reçu avec les données reçues. Remplace toutes les données du point de vente dans la base de données par celles reçues!
      summary: Met à jour le point de vente possédant l'id reçu avec les données reçues.
      tags:
      - producer
      operationId: SalespointsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du point de vente à mettre à jour.
      - name: body
        in: body
        required: true
        description: Données du point de vente à mettre à jour dans la base de données. Attention, l'ensemble des informations de ce point de vente stoquées dans la base de données seront remplacées par celles-ci!
        schema:
          $ref: '#/definitions/SalesPoint'
      responses:
        200:
          description: Le point de vente a bien été mis à jour.
          schema:
            $ref: '#/definitions/SalesPoint'
        default:
          description: Erreur! Impossible de mettre à jour le point de vente reçu.
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Supprime le point de vente correspondant à l'id reçu.
      summary: Supprime le point de vente correspondant à l'id reçu.
      tags:
      - producer
      operationId: SalespointsByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: L'id du point de vente à supprimer.
      responses:
        204:
          description: Le point de vente correspondant à l'id reçu a bien été supprimé de la base de données.
        default:
          description: Erreur! Impossible de supprimer de la base de données le point de vente correspondant à l'id reçu.
          schema:
            $ref: '#/definitions/Error'
definitions:
  ProducerTags:
    title: producerTags
    description: Tags autorisés permettant de filtrer la recherche de producteurs dans la base de données.
    type: object
    properties:
      name:
        description: ''
        type: string
      description:
        description: ''
        type: string
      phoneNumber:
        description: ''
        type: string
      email:
        description: ''
        type: string
      isValidated:
        description: ''
        type: boolean
  Product:
    title: product
    type: object
    properties:
      id:
        description: ''
        type: integer
        format: int32
      name:
        description: ''
        type: string
      description:
        description: ''
        type: string
      image:
        description: ''
        type: string
        format: binary
      category:
        description: Exemples de catégories':' fruits, légumes, viande, fromages, ...
        type: string
      type:
        description: Exemples de types':' pomme, tomate, boeuf, Gruyère, ...
        type: string
      availableFrom:
        description: ''
        type: string
        format: date
      availableUntil:
        description: ''
        type: string
        format: date
      producers:
        description: Tableau contenant les ids de tous les producteurs proposant ce produit.
        type: array
        items:
          type: integer
          format: int32
  Error:
    title: error
    type: object
    properties:
      code:
        description: ''
        type: integer
        format: int32
      message:
        description: ''
        type: string
      titre:
        description: ''
        type: string
    required:
    - code
    - message
  Producer:
    title: producer
    type: object
    properties:
      id:
        description: ''
        type: integer
        format: int32
      name:
        description: ''
        type: string
      description:
        description: ''
        type: string
      image:
        description: ''
        type: string
        format: binary
      phoneNumber:
        description: ''
        type: string
      email:
        description: ''
        type: string
      isValidated:
        description: ''
        type: boolean
      password:
        description: ''
        type: string
  SalesPoint:
    title: salesPoint
    description: Lieu où les produits du producteurs sont vendus.
    type: object
    properties:
      id:
        description: ''
        type: integer
        format: int32
      name:
        description: ''
        type: string
      description:
        description: ''
        type: string
      type:
        description: ''
        type: string
      address:
        $ref: '#/definitions/Address'
      schedule:
        $ref: '#/definitions/Schedule'
      producers:
        description: Tableau contenant les ids de tous les producteurs vendant des produits depuis ce point de vente.
        type: array
        items:
          type: integer
          format: int32
  Address:
    title: address
    description: Adresse d'un point de vente.
    type: object
    properties:
      number:
        description: ''
        type: string
      street:
        description: ''
        type: string
      city:
        description: ''
        type: string
      postalCode:
        description: ''
        type: integer
        format: int32
      country:
        description: ''
        type: string
      longitude:
        description: ''
        type: number
        format: double
      latitude:
        description: ''
        type: number
        format: double
  Schedule:
    title: schedule
    description: Horaires complets du point de vente.
    type: object
    properties:
      id:
        description: ''
        type: integer
        format: int32
      description:
        description: ''
        type: object
      dailySchedule:
        description: ''
        type: array
        items:
          $ref: '#/definitions/DailySchedule'
        maxItems: 7
  DailySchedule:
    title: dailySchedule
    description: Horaires effectués pour ce 'weekday'.
    type: object
    properties:
      id:
        description: ''
        type: integer
        format: int32
      weekday:
        description: ''
        type: string
      openingHourAM:
        description: ''
        type: string
        format: date-time
      openingHourPM:
        description: ''
        type: string
        format: date-time
      closingHourAM:
        description: ''
        type: string
        format: date-time
      closingHourPM:
        description: ''
        type: string
        format: date-time
  Error63:
    title: error63
    type: object
    properties:
      code:
        description: ''
        type: integer
        format: int32
      message:
        description: ''
        type: string
      titre:
        description: ''
        type: string
    required:
    - code
    - message
tags:
- name: products
  description: ''
- name: producer
  description: ''
