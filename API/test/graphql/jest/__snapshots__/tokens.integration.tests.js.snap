// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing graphql resquest user MUTATION tokens Testing askNewEmailToken(email:String!, password: String!) should fail returning a new token for validate an email because incorrect password received 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: Received password is not correct!],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing askNewEmailToken(email:String!, password: String!) should fail returning a new token for validate an email because unknown email received 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: There is no user corresponding to the email "unknown@mail.com"],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing login(email: String!, password:String!) should fail during login because incorrect password received 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: Received password is not correct!],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing login(email: String!, password:String!) should fail during login because unknown email received 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: There is no user corresponding to the email "unknown@mail.com"],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsProducer(newProducer: ProducerInputAdd!) should fail creating a new producer and returning a token because missing mendatory information (email) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$producer" got invalid value { firstname: "benoit", lastname: "schop", password: "abcd1234" }; Field value.email of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsProducer(newProducer: ProducerInputAdd!) should fail creating a new producer and returning a token because missing mendatory information (firstname) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$producer" got invalid value { lastname: "schop", email: "ben@schop.ch", password: "abcd1234" }; Field value.firstname of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsProducer(newProducer: ProducerInputAdd!) should fail creating a new producer and returning a token because missing mendatory information (lastname) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$producer" got invalid value { firstname: "benoit", email: "ben@schop.ch", password: "abcd1234" }; Field value.lastname of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsProducer(newProducer: ProducerInputAdd!) should fail creating a new producer and returning a token because missing mendatory information (password) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$producer" got invalid value { firstname: "benoit", lastname: "schop", email: "ben@schop.ch" }; Field value.password of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsUser(newUser: UserInputAdd!) should fail creating a new user and returning a token because missing mendatory information (email) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$user" got invalid value { firstname: "benoit", lastname: "schop", password: "abcd1234" }; Field value.email of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsUser(newUser: UserInputAdd!) should fail creating a new user and returning a token because missing mendatory information (firstname) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$user" got invalid value { lastname: "schop", email: "ben@schop.ch", password: "abcd1234" }; Field value.firstname of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsUser(newUser: UserInputAdd!) should fail creating a new user and returning a token because missing mendatory information (lastname) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$user" got invalid value { firstname: "benoit", email: "ben@schop.ch", password: "abcd1234" }; Field value.lastname of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing signUpAsUser(newUser: UserInputAdd!) should fail creating a new user and returning a token because missing mendatory information (password) 1`] = `
Object {
  "errors": Array [
    [GraphQLError: Variable "$user" got invalid value { firstname: "benoit", lastname: "schop", email: "ben@schop.ch" }; Field value.password of required type String! was not provided.],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing validateAnEmailToken(emailValidationToken: String!) should fail validating an email with received token because invalid token received 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: invalid token],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing validateAnEmailToken(emailValidationToken: String!) should fail validating an email with received token because no token received 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: jwt must be provided],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing validateAnEmailToken(emailValidationToken: String!) should fail validating an email with received token because token has been modified 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: invalid signature],
  ],
}
`;

exports[`Testing graphql resquest user MUTATION tokens Testing validateAnEmailToken(emailValidationToken: String!) should fail validating an email with received token because token has expired 1`] = `
Object {
  "data": null,
  "errors": Array [
    [GraphQLError: Your token is expired. Please ask for a new one.],
  ],
}
`;
