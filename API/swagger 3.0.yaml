openapi: "3.0.1"
info:
  version: "0.0.3"
  title: Local Food
  description: Une API pour le site internet foodlocal.ch crée avec la spécification OpenAPI 3.0.
  termsOfService: http://swagger.io/terms/
  contact:
    name: Local Food Team
    email: info@foodlocal.ch
    url: http://foodlocal.ch/contact
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: http://api.foodlocal.ch/v1
  description: Serveur de production.
- url: http://api.tests.foodlocal.ch/v1
  description: Serveur de tests.
paths:
  /products:
    get:
      tags: [products, producer]
      summary: Retourne tous les produits de la base de données.
      description: Retourne "limit" produits de la base de données, fitlrés selon les tags "tags" reçus à partir de la page "page". Sans paramètres, retourne tous les produits de la base de données.
      operationId: getProducts
      parameters:
      - name: tags
        in: query
        description: Tags à utiliser pour filtrer les résultats. Séparer plusieurs tags à l'aide de ",".
        required: false
        allowEmptyValue: false
        style: form
        schema:
          $ref: '#/components/schemas/producerTags'
      - name: limit
        in: query
        description: Nombre maximum de produits à retourner.
        required: false
        allowEmptyValue: false
        style: form
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Numéro de la page à retourner. Permet par exemple de récupérer la "page"ème page de "limit" produits. Par exemple, si "limit" vaut 20 et "page" vaut 3, on récupère la 3ème page de 20 produits, soit les produits 41 à 60.
        required: false
        allowEmptyValue: false
        deprecated: false
        style: form
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Réponses contenant "limit" produits de la base de données fitlrés selon les tags "tags" reçus à partir de la page "page".
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        default:
          description: Erreur! Impossible de récupérer les produits de la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags: [products]
      summary: Ajoute un nouveau produit dans la base de données.
      description: Ajoute un nouveau produit dans la base de données. Attention, doublons autorisés!
      operationId: addProduct
      requestBody:
        description: Les données du produit à ajouter à la base de données.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: Le produit a bien été ajouté à la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        default:
          description: Erreur! Impossible d'ajouter le produit à la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /products/{id}:
    get:
      tags: [products]
      summary: Retourne le produit correspondant à l'id reçu.
      description: Retourne le produit correspondant à l'id reçu.
      operationId: getProductById
      parameters:
      - name: id
        in: path
        description: L'id du produit à récupérer.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Réponse contenant le produit correspondant à l'id recherché.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        default:
          description:  Erreur! Impossible de récupérer le produit correspondant à l'id reçu dans la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags: [products]
      summary: Met à jour le produit possédant l'id reçu.
      description: Met à jour le produit possédant l'id reçu avec les données reçues. Remplace toutes les données du produit dans la base de données par celles reçues!
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        description: L'id du produit à mettre à jour.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Données du produit à mettre à jour dans la base de données. Attention, l'ensemble des informations de ce produit stoquées dans la base de données seront remplacées par celles-ci!
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: Le produit a bien été mis à jour à la base de données
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        default:
          description: Erreur! Impossible de mettre à jour le produit reçu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags: [products]
      summary: Supprime le produit correspondant à l'id reçu.
      description: Supprime le produit correspondant à l'id reçu.
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        description: L'id du produit à supprimer
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Le produit correspondant à l'id reçu a bien été supprimé de la base de données.
        default:
          description: Erreur! Impossible de supprimer de la base de données le produit correspondant à l'id reçu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /producers:
    get:
      tags: [producer]
      summary: Retourne tous les producteurs de la base de données.
      description: Retourne "limit" producteurs de la base de données, fitlrés selon les tags "tags" reçus à partir de la page "page". Sans paramètres, retourne tous les producteurs de la base de données.
      operationId: getProducer
      parameters:
      - name: tags
        in: query
        description: Tags à utiliser pour filtrer les résultats. Séparer plusieurs tags à l'aide de ",".
        required: false
        allowEmptyValue: false
        style: form
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Nombre maximum de producteurs à retourner.
        required: false
        allowEmptyValue: false
        deprecated: false
        style: form
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Numéro de la page à retourner. Permet par exemple de récupérer la "page"ème page de "limit" producteurs. Par exemple, si "limit" vaut 20 et "page" vaut 3, on récupère la 3ème page de 20 producteurs, soit les producteurs 41 à 60.
        required: false
        allowEmptyValue: false
        deprecated: false
        style: form
        schema:
          type: integer
          format: int32
      - name: lat
        in: query
        description: La latitude de l'utilisateur
        required: false
        allowEmptyValue: false
        style: form
        schema:
          type: number
          format: double
      - name: long
        in: query
        description: La longitude de l'utilisateur
        required: false
        allowEmptyValue: false
        style: form
        schema:
          type: number
          format: double
      - name: zoom
        in: query
        description: Le zoom actuel de la map de l'utilisateur. Permet à l'API de déterminer la zone vue par l'utilisateur et donc quels producteurs retourner pour l'affichage.
        required: false
        allowEmptyValue: false
        style: form
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Réponses contenant "limit" producteurs de la base de données fitlrés selon les tags "tags" reçus à partir de la page "page".
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/producer'
        default:
          description: Erreur! Impossible de récupérer les producteurs de la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags: [producer]
      summary: Ajoute un nouveau producteur dans la base de données.
      description: Ajoute un nouveau producteur dans la base de données. Doublons autorisés!
      operationId: addProducer
      requestBody:
        description: Les données du producteur à ajouter à la base de données.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/producer'
      responses:
        '200':
          description: Le producteur a bien été ajouté à la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/producer'
        default:
          description: Erreur! Impossible d'ajouter le producteur à la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /producers/{id}:
    get:
      tags: [producer]
      summary: Retourne le producteur correspondant à l'id reçu.
      description: Retourne le producteur correspondant à l'id reçu.
      operationId: getProducerById
      parameters:
      - name: id
        in: path
        description: L'id du producteur à récupérer.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Réponse contenant le producteur correspondant à l'id recherché.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/producer'
        default:
          description: Erreur! Impossible de récupérer le producteur correspondant à l'id reçu dans la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags: [producer]
      summary: Met à jour le producteur possédant l'id reçu.
      description: Met à jour le producteur possédant l'id reçu avec les données reçues. Remplace toutes les données du producteur dans la base de données par celles reçues!
      operationId: updateProducer
      parameters:
      - name: id
        in: path
        description: L'id du producteur à mettre à jour.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Données du producteur à mettre à jour dans la base de données. Attention, l'ensemble des informations de ce producteur stoquées dans la base de données seront remplacées par celles-ci!
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/producer'
      responses:
        '200':
          description: Le producteur a bien été mis à jour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/producer'
        default:
          description: Erreur! Impossible de mettre à jour le producteur reçu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags: [producer]
      summary: Supprime le producteur correspondant à l'id reçu.
      description: Supprime le producteur correspondant à l'id reçu.
      operationId: deleteProducer
      parameters:
      - name: id
        in: path
        description: L'id du producteur à supprimer.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Le producteur correspondant à l'id reçu a bien été supprimé de la base de données.

        default:
          description: Erreur! Impossible de supprimer de la base de données le producteur correspondant à l'id reçu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /salespoints:
    get:
      tags: [producer, salespoints]
      summary: Retourne tous les points de vente de la base de données.
      description: Retourne "limit" points de vente de la base de données, fitlrés selon les tags "tags" reçus à partir de la page "page". Sans paramètres, retourne tous les points de vente de la base de données.
      operationId: getSalesPoints
      parameters:
      - name: tags
        in: query
        description: Tags à utiliser pour filtrer les résultats. Séparer plusieurs tags à l'aide de ",".
        required: false
        allowEmptyValue: false
        style: form
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: Nombre maximum de points de vente à retourner.
        required: false
        allowEmptyValue: false
        deprecated: false
        style: form
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Numéro de la page à retourner. Permet par exemple de récupérer la "page"ème page de "limit" points de vente. Par exemple, si "limit" vaut 20 et "page" vaut 3, on récupère la 3ème page de 20 points de vente, soit les points de vente 41 à 60.
        required: false
        allowEmptyValue: false
        deprecated: false
        style: form
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Réponses contenant "limit" points de vente de la base de données fitlrés selon les tags "tags" reçus à partir de la page "page".
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/salesPoint'
        default:
          description: Erreur! Impossible de récupérer les points de vente de la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags: [producer, salespoints]
      summary: Ajoute un nouveau point de vente dans la base de données.
      description: Ajoute un nouveau point de vente dans la base de données. Doublons autorisés!
      operationId: addSalesPoint
      requestBody:
        description: Les données du point de vente à ajouter à la base de données.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesPoint'
      responses:
        '200':
          description: Le point de vente a bien été ajouté à la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesPoint'
        default:
          description: Erreur! Impossible d'ajouter le point de vente à la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /salespoints/{id}:
    get:
      tags: [producer, salespoints]
      summary: Retourne le points de vente correspondant à l'id reçu.
      description: Retourne le point de vente correspondant à l'id reçu.
      operationId: getSalesPointById
      parameters:
      - name: id
        in: path
        description: L'id du point de vente à récupérer.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Réponse contenant le point de vente correspondant à l'id recherché.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesPoint'
        default:
          description: Erreur! Impossible de récupérer le point de vente correspondant à l'id reçu dans la base de données.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags: [producer, salespoints]
      summary: Met à jour le point de vente possédant l'id reçu avec les données reçues.
      description: Met à jour le point de vente possédant l'id reçu avec les données reçues. Remplace toutes les données du point de vente dans la base de données par celles reçues!
      operationId: updateSalesPoint
      parameters:
      - name: id
        in: path
        description: L'id du point de vente à mettre à jour.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Données du point de vente à mettre à jour dans la base de données. Attention, l'ensemble des informations de ce point de vente stoquées dans la base de données seront remplacées par celles-ci!
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesPoint'
      responses:
        '200':
          description: Le point de vente a bien été mis à jour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesPoint'
        default:
          description: Erreur! Impossible de mettre à jour le point de vente reçu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags: [producer, salespoints]
      summary: Supprime le point de vente correspondant à l'id reçu.
      description: Supprime le point de vente correspondant à l'id reçu.
      operationId: deleteSalesPoint
      parameters:
      - name: id
        in: path
        description: L'id du point de vente à supprimer.
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Le point de vente correspondant à l'id reçu a bien été supprimé de la base de données.

        default:
          description: Erreur! Impossible de supprimer de la base de données le point de vente correspondant à l'id reçu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        image:
          type: string
          format: binary
        category:
          type: string
          description: Exemples de catégories':' fruits, légumes, viande, fromages, ...
        type:
          type: string
          description: Exemples de types':' pomme, tomate, boeuf, Gruyère, ...
        availableFrom:
          type: string
          format: date
        availableUntil:
          type: string
          format: date
        producers:
          type: array
          description: Tableau contenant les ids de tous les producteurs proposant ce produit.
          items:
            type: integer
            format: int32

    producer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        image:
          type: string
          format: binary
        phoneNumber:
          type: string
        email:
          type: string
        isValidated:
          type: boolean
        password:
          type: string
          format: password

    producerTags:
      type: object
      description: Tags autorisés permettant de filtrer la recherche de producteurs dans la base de données.
      properties:
        name:
          type: string
        description:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        isValidated:
          type: boolean

    salesPoint:
      type: object
      description: Lieu où les produits du producteurs sont vendus.
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        type:
          type: string
        address:
          $ref: '#/components/schemas/address'
        schedule:
          $ref: '#/components/schemas/schedule'
        producers:
          type: array
          description: Tableau contenant les ids de tous les producteurs vendant des produits depuis ce point de vente.
          items:
            type: integer
            format: int32

    schedule:
      type: object
      description: Horaires complets du point de vente.
      properties:
        id:
          type: integer
          format: int32
        description:
          format: string
        dailySchedule:
          type: array
          maxItems: 7
          items:
            $ref: '#/components/schemas/dailySchedule'

    dailySchedule:
      type: object
      description: Horaires effectués pour ce 'weekday'.
      properties:
        id:
          type: integer
          format: int32
        weekday:
          type: string
        openingHourAM:
          type: string
          format: date-time
        openingHourPM:
          type: string
          format: date-time
        closingHourAM:
          type: string
          format: date-time
        closingHourPM:
          type: string
          format: date-time

    address:
      type: object
      description: Adresse d'un point de vente.
      properties:
        number:
          type: string
        street:
          type: string
        city:
          type: string
        postalCode:
          type: integer
          format: int32
        country:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double

    error:
      required:
      - code
      - message
      - title
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        titre:
          type: string
