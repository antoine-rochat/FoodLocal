directive @connection on FIELD_DEFINITION

type Query {
	# Retourne tous les producteurs de la base de données.
	producers: ProducerConnection! @connection

	# Retourne le producteur correspondant à l'id reçu. Retourne null si aucun producteur ne possède cet id.
	producer(producerId: ID!) : Producer

	# Retourne tous les producteurs attendant d'être validés par un administrateur (isValidated = false).
	producersWaitingForValidation: ProducerConnection! @connection

	# Retourne tous les producteurs du plus proche au plus éloigné par rapport à la position 'locationClient' reçue en paramètre. Ignore les producteurs situés à plus de 'maxDistance' du client.
	# Si un paramètre byProductTypeIds est donné, retourne tous les producteurs produisant au moins un produit du type correspondant à un des ids du tableau reçu en paramètre.
	# Si un paramètre ratingMin est donné, retourne uniquement les producteurs dont le rating est égal ou plus grand que 'ratingMin'.
	geoFilterProducers(locationClient: ClientLocation!, byProductTypeIds: [ID!], ratingMin: Int): ProducerConnection! @connection
}

type Mutation {
	# Valide le producteur correspondant au producerId si le booléen validationState vaut true, l'invalide s'il vaut false.
	validateAProducer(producerId: ID!, validationState: Boolean!): Producer!

	# Met à jour les informations du producteur reçu en paramètre. Retourne null si ce producteur n'existe pas.
	updateProducer(producer: ProducerInputUpdate!): Producer
}

# Représente la localisation du client faisant l'appel à l'API.
input ClientLocation {
	longitude: Float!
	latitude: Float!

	# la distance maximale des producteurs à retourner. Les producteurs situés à plus de maxDistance mètres du client seront ignorés.
	maxDistance: Float
}

type Producer implements Person {
	id: ID!
	firstname: String!
	lastname: String!
	email: String!
	image: String
	# Tableau contenant tous les producteur que la personne suit.
	followingProducers: ProducerConnection! @connection
	# Booléen valant true si l'email a été validé par le membre, false sinon.
	emailValidated: Boolean!
	isAdmin: Boolean!
	# Tableau contenant tous les followers du producteur. Ces followers peuvent être des utilisateurs mais aussi des producteurs.
	followers: PersonConnection! @connection
	phoneNumber: String
	description: String
	website: String
	salespoint: Salespoint
	isValidated: Boolean!
	# Tableau contenant tous les produits proposés par le producteur.
	products: ProductConnection! @connection
	# Note moyenne attribuée au producteur par les autres membres.
	rating: ProducerRating
}

type ProducerRating {
	# Nombre total de notes qu'à reçu le producteur
	nbRatings: Int!
	# Moyenne des notes qu'à reçu le producteur
	grade: Float!
}

input ProducerInputAdd {
	firstname: String!
	lastname: String!
	email: String!
	password: String!
	image: String
	phoneNumber: String
	description: String
	website: String
}

input ProducerInputUpdate {
	id: ID!
	firstname: String
	lastname: String
	image: String
	phoneNumber: String
	description: String
	website: String
}

type ProducerConnection {
	pageInfo: PageInfo!
	edges: [ProducerEdge!]!
	totalCount: Int!
}

type ProducerEdge {
	node: Producer!
	cursor: String!
}
