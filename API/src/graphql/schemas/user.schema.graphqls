type Query {
	users: UserConnection! @connection
	user(userId: ID!) : User
}

type Mutation {
	updateUser(user: UserInputUpdate!): User
}

type User implements Person {
	id: ID!
	firstname: String!
	lastname: String!
	email: String!
	# password: String! # le password n'est pas accessible côté client!
	image: String
	followingProducers: ProducerConnection!
	emailValidated: Boolean!
	isAdmin: Boolean!
}

input UserInputAdd {
	# id: ID!
	firstname: String!
	lastname: String!
	email: String!
	password: String! # password obligatoire à l'ajout
	image: String
}

input UserInputUpdate {
	id: ID!
	firstname: String!
	lastname: String!
	image: String
}

type UserConnection {
	pageInfo: PageInfo!
	edges: [UserEdge!]!
	totalCount: Int!
}

type UserEdge {
	node: User!
	cursor: String!
}
