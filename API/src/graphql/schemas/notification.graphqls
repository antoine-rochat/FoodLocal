type Query {
	# Retourne le nombre de notifications non lues de la personne
	numberOfUnSeenNotificationsOfPerson: Int!

	# Retourne toutes les notifications de la personne correspondante à l'id 'personId'
	notificationsOfPerson(personId: ID!): PersonNotificationConnection! @connection
}

type Mutation {
	# Passe à 'lues' toutes les notifications non-lues de la personne
	setAllNotificationsAsSeen: Int!

	# Passe à 'lues' la notification de la personne 'personId' corresondant au 'personNotificationId' reçu
	setNotificationAsSeen(personId: ID!, personNotificationId: ID!): PersonNotification!
}

type Subscription {
	# Enregistre l'utilisateur afin qu'il soit avisé en temps réel s'il reçoit une nouvelle notification
	newNotificationReceived: PersonNotification!
}

type PersonNotification {
	id: ID!
	# La personne concernée par la notification
	person: Person!
	# La notification
	notification: Notification!
	# Booléen valant true si la notification a déjà été lue par la personne, false sinon
	seen: Boolean!
}

enum Type {
	# Notification émise lors de la publication d'un nouveau post d'un producteur suivi par la personne
	NEW_POST,
	# Notification émise lorsqu'un producteur suivi par la personne met à jour ses informations générales
	PRODUCER_UPDATE_INFO,
	# Notification émise lorsqu'un producteur suivi par la personne met à jour sa liste de produits
	PRODUCER_UPDATE_PRODUCTS_LIST,
	# Notification émise lorsqu'un producteur suivi par la personne met à jour les informations de son point de vente
	PRODUCER_UPDATE_SALESPOINT_INFO
}

type Notification {
	# Le type de notification (nouveau post / MAJ des informations / MAJ de la liste de produits / MAJ des informations d'un point de vente d'un producteur suivi par la personne
	type: Type!
	# La date de création de la notification
	date: Date!
	# Le producteur dont l'action a entrainé la création de la notification
	producer: Producer!
	# Le post du producteur ayant généré la notification. Présent dans la notification que si elle est de type NEW_POST.
	post: Post!
}

type PersonNotificationConnection {
	pageInfo: PageInfo!
	edges: [PersonNotificationEdge!]!
	totalCount: Int!
}

type PersonNotificationEdge {
	node: PersonNotification!
	cursor: String!
}
